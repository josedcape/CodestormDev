/**
 * Script de prueba final para verificar que ambas APIs funcionen correctamente
 */

console.log('üß™ PRUEBA FINAL DE APIS CODESTORM');
console.log('='.repeat(40));

/**
 * Probar OpenAI a trav√©s del proxy
 */
async function testOpenAI() {
    console.log('\nü§ñ PROBANDO OPENAI:');
    console.log('-'.repeat(20));
    
    try {
        const response = await fetch('http://localhost:3002/api/openai/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                model: 'gpt-4o-mini',
                max_tokens: 20,
                messages: [{ role: 'user', content: 'Responde brevemente: ¬øQu√© es JavaScript?' }]
            })
        });

        console.log(`üì° Status: ${response.status}`);
        
        if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ OpenAI funcionando correctamente');
            console.log(`üìù Respuesta: ${data.choices[0]?.message?.content || 'Sin contenido'}`);
            return true;
        } else {
            const errorData = await response.json();
            console.log('‚ùå Error en OpenAI:', JSON.stringify(errorData, null, 2));
            return false;
        }
    } catch (error) {
        console.log('‚ùå Error de conexi√≥n OpenAI:', error.message);
        return false;
    }
}

/**
 * Probar Anthropic a trav√©s del proxy
 */
async function testAnthropic() {
    console.log('\nüß† PROBANDO ANTHROPIC:');
    console.log('-'.repeat(20));
    
    try {
        const response = await fetch('http://localhost:3002/api/anthropic/v1/messages', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                model: 'claude-3-5-sonnet-20241022',
                max_tokens: 20,
                messages: [{ role: 'user', content: 'Responde brevemente: ¬øQu√© es TypeScript?' }]
            })
        });

        console.log(`üì° Status: ${response.status}`);
        
        if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ Anthropic funcionando correctamente');
            console.log(`üìù Respuesta: ${data.content[0]?.text || 'Sin contenido'}`);
            return true;
        } else {
            const errorData = await response.json();
            console.log('‚ùå Error en Anthropic:', JSON.stringify(errorData, null, 2));
            return false;
        }
    } catch (error) {
        console.log('‚ùå Error de conexi√≥n Anthropic:', error.message);
        return false;
    }
}

/**
 * Funci√≥n principal
 */
async function main() {
    try {
        // Verificar que el proxy est√© funcionando
        console.log('üåê Verificando proxy...');
        const proxyResponse = await fetch('http://localhost:3002');
        if (!proxyResponse.ok) {
            console.log('‚ùå Proxy no disponible en puerto 3002');
            console.log('üí° Ejecuta: node simple-proxy.js');
            return;
        }
        console.log('‚úÖ Proxy funcionando en puerto 3002');

        // Probar ambas APIs
        const openaiOk = await testOpenAI();
        const anthropicOk = await testAnthropic();

        // Resumen final
        console.log('\nüéØ RESUMEN FINAL:');
        console.log('='.repeat(20));
        console.log(`ü§ñ OpenAI: ${openaiOk ? '‚úÖ FUNCIONANDO' : '‚ùå ERROR'}`);
        console.log(`üß† Anthropic: ${anthropicOk ? '‚úÖ FUNCIONANDO' : '‚ùå ERROR'}`);
        
        if (openaiOk && anthropicOk) {
            console.log('\nüéâ ¬°AMBAS APIS FUNCIONANDO CORRECTAMENTE!');
            console.log('üöÄ CODESTORM listo para usar con:');
            console.log('   - GPT-4O-Mini para generaci√≥n de c√≥digo');
            console.log('   - Claude para planificaci√≥n y dise√±o');
        } else if (openaiOk) {
            console.log('\n‚úÖ OpenAI funcionando - CODESTORM operativo');
            console.log('‚ö†Ô∏è  Anthropic con problemas - Solo GPT disponible');
        } else {
            console.log('\n‚ùå Problemas de conectividad');
            console.log('üí° Verifica las claves API en .env');
        }

    } catch (error) {
        console.error('‚ùå Error durante las pruebas:', error);
    }
}

// Ejecutar pruebas
main();
