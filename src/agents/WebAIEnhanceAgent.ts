import { processInstruction } from '../services/ai';
import { generateUniqueId } from '../utils/idGenerator';

export interface WebAIEnhanceResult {
  success: boolean;
  data?: {
    originalInstruction: string;
    enhancedInstruction: string;
    analysisDetails: {
      businessType: string;
      industry: string;
      targetAudience: string;
      requiredPages: string[];
      designStyle: string;
      colorPalette: string[];
      keyFeatures: string[];
    };
    technicalSpecs: {
      htmlStructure: string[];
      cssFeatures: string[];
      jsFeatures: string[];
      seoRequirements: string[];
      accessibilityFeatures: string[];
    };
  };
  error?: string;
}

/**
 * Agente especializado en mejorar instrucciones para sitios web est√°ticos
 * Optimiza las instrucciones del usuario para generar sitios web profesionales
 * usando HTML5, CSS3 y JavaScript vanilla
 */
export class WebAIEnhanceAgent {
  /**
   * Mejora una instrucci√≥n del usuario para sitios web est√°ticos
   * @param instruction Instrucci√≥n original del usuario
   * @returns Resultado con la instrucci√≥n mejorada
   */
  static async enhance(instruction: string): Promise<WebAIEnhanceResult> {
    try {
      if (!instruction || instruction.trim().length === 0) {
        throw new Error('La instrucci√≥n no puede estar vac√≠a');
      }

      console.log('üåê WebAI EnhanceAgent: Procesando instrucci√≥n para sitio web est√°tico');

      // Construir el prompt especializado
      const prompt = this.buildEnhancePrompt(instruction);

      // Llamar a la API de IA (Claude o OpenAI)
      const response = await processInstruction(prompt, 'Claude 3.5 Sonnet V2');

      if (!response || !response.content || !response.content.trim()) {
        throw new Error('No se recibi√≥ respuesta de la API de IA');
      }

      // Extraer y procesar la respuesta
      const result = this.parseEnhanceResponse(response.content, instruction);

      console.log('‚úÖ WebAI EnhanceAgent: Instrucci√≥n mejorada exitosamente');
      return result;

    } catch (error) {
      console.error('‚ùå Error en WebAI EnhanceAgent:', error);
      return {
        success: false,
        error: error instanceof Error ? error.message : 'Error desconocido al mejorar la instrucci√≥n'
      };
    }
  }

  /**
   * Construye el prompt especializado para sitios web est√°ticos
   * @param instruction Instrucci√≥n original del usuario
   * @returns Prompt optimizado para IA (Claude/OpenAI)
   */
  private static buildEnhancePrompt(instruction: string): string {
    return `
Eres un experto consultor en desarrollo de sitios web est√°ticos profesionales. Tu especialidad es transformar instrucciones vagas o b√°sicas en especificaciones t√©cnicas detalladas y profesionales para sitios web est√°ticos usando HTML5, CSS3 y JavaScript vanilla.

INSTRUCCI√ìN ORIGINAL DEL USUARIO:
"${instruction}"

Tu tarea es analizar esta instrucci√≥n y crear una versi√≥n mejorada y detallada que incluya:

1. AN√ÅLISIS DEL NEGOCIO:
   - Tipo espec√≠fico de negocio/industria
   - P√∫blico objetivo identificado
   - Prop√≥sito principal del sitio web
   - Competencia y posicionamiento

2. ESTRUCTURA DEL SITIO WEB EST√ÅTICO:
   - P√°ginas espec√≠ficas necesarias (index.html, about.html, services.html, contact.html, etc.)
   - Secciones principales por p√°gina
   - Navegaci√≥n y arquitectura de informaci√≥n
   - Jerarqu√≠a de contenido

3. ESPECIFICACIONES T√âCNICAS PARA SITIO EST√ÅTICO:
   - HTML5 sem√°ntico con elementos apropiados
   - CSS3 moderno con variables CSS y flexbox/grid
   - JavaScript vanilla para interactividad (sin frameworks)
   - Dise√±o responsive mobile-first
   - Optimizaci√≥n para hosting est√°tico

4. SEO Y ACCESIBILIDAD:
   - Meta tags espec√≠ficos para la industria
   - Structured data apropiado
   - ARIA labels y accesibilidad WCAG 2.1 AA
   - Optimizaci√≥n de rendimiento para sitios est√°ticos
   - URLs amigables y estructura de enlaces

5. DISE√ëO VISUAL:
   - Paleta de colores apropiada para la industria
   - Tipograf√≠as web optimizadas
   - Estilo visual coherente con el sector
   - Elementos gr√°ficos y multimedia necesarios

6. CONTENIDO PERSONALIZADO:
   - Secciones espec√≠ficas relevantes al negocio
   - Llamadas a la acci√≥n apropiadas
   - Formularios necesarios (contacto, suscripci√≥n, etc.)
   - Integraci√≥n con redes sociales si es relevante

IMPORTANTE:
- Enf√≥cate EXCLUSIVAMENTE en sitios web est√°ticos (HTML/CSS/JS vanilla)
- NO menciones frameworks como React, Vue, Angular
- NO incluyas funcionalidades que requieran backend complejo
- S√ç incluye funcionalidades que se puedan lograr con JavaScript vanilla
- Mant√©n el enfoque en rendimiento y simplicidad de hosting est√°tico

Responde √öNICAMENTE con un objeto JSON con la siguiente estructura:

{
  "analysis": {
    "businessType": "string (tipo espec√≠fico de negocio)",
    "industry": "string (industria espec√≠fica)",
    "targetAudience": "string (p√∫blico objetivo identificado)",
    "purpose": "string (prop√≥sito principal del sitio)",
    "requiredPages": ["array de p√°ginas espec√≠ficas necesarias"],
    "designStyle": "string (estilo de dise√±o apropiado)",
    "colorPalette": ["array de colores hex apropiados"],
    "keyFeatures": ["array de caracter√≠sticas clave del sitio"]
  },
  "technicalSpecs": {
    "htmlStructure": ["array de elementos HTML5 sem√°nticos necesarios"],
    "cssFeatures": ["array de caracter√≠sticas CSS3 modernas a usar"],
    "jsFeatures": ["array de funcionalidades JavaScript vanilla"],
    "seoRequirements": ["array de requisitos SEO espec√≠ficos"],
    "accessibilityFeatures": ["array de caracter√≠sticas de accesibilidad"]
  },
  "enhancedInstruction": "string (instrucci√≥n mejorada y detallada de 200-400 palabras que incluya todos los aspectos t√©cnicos, de dise√±o y de contenido espec√≠ficos para crear un sitio web est√°tico profesional)"
}

El JSON debe ser completamente v√°lido, sin comentarios y con todas las especificaciones t√©cnicas detalladas para un sitio web est√°tico profesional.
    `;
  }

  /**
   * Parsea la respuesta de la API y extrae la informaci√≥n mejorada
   * @param response Respuesta de la API
   * @param originalInstruction Instrucci√≥n original
   * @returns Resultado parseado
   */
  private static parseEnhanceResponse(response: string, originalInstruction: string): WebAIEnhanceResult {
    try {
      // Extraer JSON de la respuesta
      const jsonMatch = response.match(/```json\n([\s\S]*?)\n```/) || response.match(/{[\s\S]*}/);

      if (!jsonMatch) {
        throw new Error('No se encontr√≥ un objeto JSON v√°lido en la respuesta');
      }

      let jsonString = jsonMatch[0].replace(/```json\n|```/g, '');

      // Limpiar comentarios y caracteres problem√°ticos
      jsonString = this.cleanJSONString(jsonString);

      const parsedResponse = JSON.parse(jsonString);

      // Validar estructura de respuesta
      if (!parsedResponse.analysis || !parsedResponse.technicalSpecs || !parsedResponse.enhancedInstruction) {
        throw new Error('La respuesta no tiene la estructura esperada');
      }

      return {
        success: true,
        data: {
          originalInstruction,
          enhancedInstruction: parsedResponse.enhancedInstruction,
          analysisDetails: {
            businessType: parsedResponse.analysis.businessType || 'No especificado',
            industry: parsedResponse.analysis.industry || 'General',
            targetAudience: parsedResponse.analysis.targetAudience || 'P√∫blico general',
            requiredPages: parsedResponse.analysis.requiredPages || ['index.html'],
            designStyle: parsedResponse.analysis.designStyle || 'Moderno',
            colorPalette: parsedResponse.analysis.colorPalette || ['#3b82f6', '#10b981'],
            keyFeatures: parsedResponse.analysis.keyFeatures || []
          },
          technicalSpecs: {
            htmlStructure: parsedResponse.technicalSpecs.htmlStructure || [],
            cssFeatures: parsedResponse.technicalSpecs.cssFeatures || [],
            jsFeatures: parsedResponse.technicalSpecs.jsFeatures || [],
            seoRequirements: parsedResponse.technicalSpecs.seoRequirements || [],
            accessibilityFeatures: parsedResponse.technicalSpecs.accessibilityFeatures || []
          }
        }
      };

    } catch (error) {
      console.error('Error al parsear respuesta de WebAI EnhanceAgent:', error);

      // Generar mejora b√°sica como fallback
      return this.generateBasicEnhancement(originalInstruction);
    }
  }

  /**
   * Limpia el string JSON removiendo comentarios y caracteres problem√°ticos
   * @param jsonString String JSON a limpiar
   * @returns String JSON limpio
   */
  private static cleanJSONString(jsonString: string): string {
    return jsonString
      .replace(/\/\/.*$/gm, '') // Remover comentarios de l√≠nea
      .replace(/\/\*[\s\S]*?\*\//g, '') // Remover comentarios de bloque
      .replace(/,(\s*[}\]])/g, '$1') // Remover comas finales
      .replace(/\s+/g, ' ') // Normalizar espacios
      .trim();
  }

  /**
   * Genera una mejora b√°sica como fallback cuando falla el parsing
   * @param originalInstruction Instrucci√≥n original
   * @returns Resultado b√°sico mejorado
   */
  private static generateBasicEnhancement(originalInstruction: string): WebAIEnhanceResult {
    const enhancedInstruction = `Crear sitio web est√°tico profesional basado en: "${originalInstruction}".

Especificaciones t√©cnicas: HTML5 sem√°ntico con estructura header/nav/main/footer, CSS3 moderno con variables CSS y dise√±o responsive mobile-first usando flexbox/grid, JavaScript vanilla para interactividad b√°sica sin dependencias externas.

Caracter√≠sticas: Dise√±o responsive optimizado para todos los dispositivos, SEO b√°sico con meta tags apropiados, accesibilidad WCAG 2.1 AA con ARIA labels, formulario de contacto funcional, navegaci√≥n suave entre secciones, optimizaci√≥n para hosting est√°tico.

P√°ginas incluidas: P√°gina principal (index.html) con hero section y contenido principal, p√°gina de informaci√≥n adicional si es relevante, p√°gina de contacto con formulario funcional.

Dise√±o visual: Paleta de colores profesional apropiada para el contexto, tipograf√≠a web optimizada, elementos visuales coherentes, animaciones CSS sutiles para mejor experiencia de usuario.`;

    return {
      success: true,
      data: {
        originalInstruction,
        enhancedInstruction,
        analysisDetails: {
          businessType: 'Sitio web general',
          industry: 'General',
          targetAudience: 'P√∫blico general',
          requiredPages: ['index.html', 'contact.html'],
          designStyle: 'Moderno y profesional',
          colorPalette: ['#3b82f6', '#10b981', '#8b5cf6'],
          keyFeatures: ['Responsive', 'SEO optimizado', 'Accesible', 'Formulario de contacto']
        },
        technicalSpecs: {
          htmlStructure: ['HTML5 sem√°ntico', 'Estructura header/nav/main/footer', 'Meta tags SEO'],
          cssFeatures: ['Variables CSS', 'Flexbox/Grid', 'Responsive design', 'Animaciones CSS'],
          jsFeatures: ['Navegaci√≥n suave', 'Validaci√≥n de formularios', 'Interactividad b√°sica'],
          seoRequirements: ['Meta tags', 'Structured data b√°sico', 'URLs amigables'],
          accessibilityFeatures: ['ARIA labels', 'Contraste adecuado', 'Navegaci√≥n por teclado']
        }
      }
    };
  }
}
